1/2/2023
Spent most of the time dealing with importing the data into SQL. Originally, I was going to just read straight from the
CSV files themselves, but I realize putting the data into a DB would both ben more efficient for reading and querying,
but also allow me to work on more varied skills, mainly database management and admin duties. Importing the data proved
more timely than desired, but I was able to get the gamelog info from 1920 successfully imported, as anything before
had quite unfinished data. Next, I'll try to get python set up to read and retrieve data from the DB.

1/3/2023
With the database set up, I could now start accessing and reading from it. After setting up a python MySQL connection,
I started by simply retrieving one row from the table. Once I confirmed it worked, I began to build a query that could
be built dynamically with user inputs. First, I made it to where a person could input a year and team, and it would
return the first 5 games of the season for that team. Then, I added an ability to choose the specific amount of games
the user would like returned. I also added a box score style layout for each game, split into an array and displayed
as one would expect from a baseball box-score. I finally made it to where it counts both the teams home and away games,
instead of just home games. I added displays to show the record over the set amount of games, the total runs scored and
runs allowed, and the average of both stats over that time.
Found an issue where I had uploaded duplicates of many of the games, nearly doubling the database size. Found out about
it, truncated the table, and uploaded the proper amount of data (Thanks, Jobert).
Changed the query string to use f-string, instead of awkward variable insertion

1/4/2023
Today, I decided to start refactoring some code into other files and methods. The main chunk involved the code that
generates the box score layout, as well as calculating the basic stats like runs scored, against, etc. I also added
fields to the SQL query to retrieve hitting stats like doubles, triples, HRs, etc. but have not yet gotten to
implementing them. I then refactored the final printing of the final stats into a separate method as well. I added
some basic help functions such as '--help' to show proper formatting for dates and team abbreviations. I then added a
dictionary that has keys of the team abbreviations, which correspond to a nested dictionary with the team city and name.
The goal is to use this dictionary to print more readable names for the final stat printouts. I later created an AWS
instance of a MySQL instance, and migrated the data from my local database to there. This should allow for users to
later download and run this project without needing to set up a local SQL database and all the data.

1/5/2023
Today, I spent most of the time messing with and setting up the AWS RDS Database instance. I was having a good amount of
trouble trying to get the user to properly be authenticated and logged in. After getting the IAM Permissions set up for a
new IAM user (mike_ohtani), I was able to get past the first error and managed to make it to actually trying to connect
to the DB. Then, I had a permissions error for the actual DB itself. I then logged in as the admin to MySQL, created a
new user based off the IAM permissions, and finally was able to login and connect to the DB. I confirmed I could query
with it. It is slower than the local, but it is a good first step to being able to work with AWS, and perhaps offload
this python program to an AWS instance. For now, I will continue to work on the functionality of the program, and will
likely revert back to using a local connection for quickness.

1/9/2023
Today, I spent time with making an overall batting average for teams over the stretch of games signified. This was
straight forward to do. Then, I decided I wanted to get more specific, game-by-game data for a team to get more detailed
and specific stats. I decided to do this with the 2002 Anaheim Angels team, who won the World Series that year. I first
imported all home games the team played in the 2002 regular season. Unfortunately, games where they were visitors will
be harder to find. I will likely have to convert each teams data file and then import only the data that has the visiting
team as 'ANA'. This will likely be a long and brute force approach, but I'm hoping I can think of a better and more
efficient way to get the rows of data I need from each file.
